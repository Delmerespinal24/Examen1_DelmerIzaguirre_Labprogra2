/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exameni_delmerizaguirre_progra2;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Owner
 */
public class Github extends javax.swing.JFrame {

    private static int carpetas = 0;
    private ArrayList<Proyecto> proyecto = new ArrayList<Proyecto>();
    private Persona Owner;

    public Github(Persona Owner) {
        initComponents();
        this.Owner = Owner;
    }

    public Persona getuser() {
        return Owner;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        Borrar = new javax.swing.JButton();
        Proyecto = new javax.swing.JButton();
        LogOut = new javax.swing.JToggleButton();
        Actualizar = new javax.swing.JButton();
        commit = new javax.swing.JButton();
        carpeta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Nombre", "Colaboradores", "Commits"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tabla);

        jButton1.setText("Abrir");

        Borrar.setText("Borrar");
        Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarActionPerformed(evt);
            }
        });

        Proyecto.setText("Nuevo Proyecto");
        Proyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProyectoActionPerformed(evt);
            }
        });

        LogOut.setText("Log Out");
        LogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutActionPerformed(evt);
            }
        });

        Actualizar.setText("Actualizar");
        Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarActionPerformed(evt);
            }
        });

        commit.setText("Commit");
        commit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commitActionPerformed(evt);
            }
        });

        carpeta.setText("Nueva carpeta");
        carpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carpetaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(LogOut))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(Borrar)
                                .addGap(18, 18, 18)
                                .addComponent(Proyecto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Actualizar)
                                .addGap(18, 18, 18)
                                .addComponent(commit)
                                .addGap(18, 18, 18)
                                .addComponent(carpeta)))
                        .addGap(0, 35, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LogOut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(Borrar)
                    .addComponent(Proyecto)
                    .addComponent(Actualizar)
                    .addComponent(commit)
                    .addComponent(carpeta))
                .addGap(102, 102, 102))
        );

        jTabbedPane1.addTab("Proyectos", jPanel1);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 730, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void actualizar() {
        String[][] matriz = new String[proyecto.size()][3];

        for (int i = 0; i < proyecto.size(); i++) {
            matriz[i][0] = proyecto.get(i).getNombre();
            matriz[i][1] = proyecto.get(i).getColaboladores();
            matriz[i][2] = "" + proyecto.get(i).getCommits();

        }

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
                matriz,
                new String[]{
                    "Nombre", "Colaboradores", "Commits"
                }
        ));

    }
    
    


    private void ProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProyectoActionPerformed
        // TODO add your handling code here:
        String name = JOptionPane.showInputDialog("Ingrese el nombre del proyecto");

        proyecto.add(new Proyecto(name));

        ArrayList<Persona> colaborador = new ArrayList<Persona>();
        colaborador.add(Owner);

        Usuarios user = new Usuarios();
        String usuarios = "";

        int cont = 0;
        for (Persona ob : user.getLista()) {
            usuarios += cont + "_ " + ob.getNombre() + "/n";
            cont++;
        }

        char Resp;
        try {
            Resp = (JOptionPane.showInputDialog("Desea agregar otro colaborador [S/N]")).charAt(0);
        } catch (Exception e) {
            Resp = 'n';
        }

        while (Resp == 'S' || Resp == 's') {

            try {
                int pos = Integer.parseInt(JOptionPane.showInputDialog("Elija los colaboladores\n" + usuarios));
                colaborador.add(user.getLista().get(pos));

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Posicion no valida");

            }
            try {
                Resp = (JOptionPane.showInputDialog("Desea agregar otro colaborador [S/N]")).charAt(0);
            } catch (Exception e) {
                Resp = 'n';
            }

        }
        for (Proyecto p1 : proyecto) {
            if (p1.getNombre().equals(name)) {
                p1.setPersonas(colaborador);
            }

        }
        actualizar();

    }//GEN-LAST:event_ProyectoActionPerformed

    private void LogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutActionPerformed
        Usuarios user = new Usuarios();
        user.setVisible(true);
        dispose();
    }//GEN-LAST:event_LogOutActionPerformed

    private void ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarActionPerformed
        actualizar();
    }//GEN-LAST:event_ActualizarActionPerformed

    private void BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarActionPerformed
        // TODO add your handling code here:
        int Fila = Tabla.getSelectedRow();
        if (Fila >= 0) {
           proyecto.remove(Fila);
        } else {
            JOptionPane.showMessageDialog(this, "Fila no seleccionada");
        }

    }//GEN-LAST:event_BorrarActionPerformed

    private void commitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commitActionPerformed
        // TODO add your handling code here:
        
        int Fila = Tabla.getSelectedRow();
        if (Fila >= 0) {
           JOptionPane.showInputDialog("Commit:");
           proyecto.get(Fila).setCommits(proyecto.get(Fila).getCommits()+1);
        } else {
           JOptionPane.showMessageDialog(this, "Fila no seleccionada");
        }
        
        
        
        
    }//GEN-LAST:event_commitActionPerformed

    private void carpetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carpetaActionPerformed
        // TODO add your handling code here:
        int Fila = Tabla.getSelectedRow();
        if (Fila >= 0) {
           carpetas++;
        } else {
           JOptionPane.showMessageDialog(this, "Fila no seleccionada");
        }
    }//GEN-LAST:event_carpetaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Actualizar;
    private javax.swing.JButton Borrar;
    private javax.swing.JToggleButton LogOut;
    private javax.swing.JButton Proyecto;
    private javax.swing.JTable Tabla;
    private javax.swing.JButton carpeta;
    private javax.swing.JButton commit;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
